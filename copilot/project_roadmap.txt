# Hoja de Ruta del Proyecto: Noxtla Gourmet Suite

## Fases Completadas

- [x] **Fase 1: Creación del Esqueleto del Proyecto (Scaffolding)**
- [x] **Fase 2: Implementación y Verificación Inicial**
- [x] **Tarea 6: Gateway de API (API Gateway)**
  - [x] 6.1. Crear un nuevo `api-gateway-service` con Spring Cloud Gateway.
  - [x] 6.2. Configurar las rutas hacia los demás microservicios.
- [x] **Tarea 7: Configuración Centralizada (Config Server)**
  - [x] 7.1. Crear un `config-service` con Spring Cloud Config.
  - [x] 7.2. Crear un repositorio Git para almacenar los archivos de configuración (simulado con repo público).
  - [x] 7.3. Conectar los microservicios al Config Server.
- [x] **Tarea 8.1: Añadir Keycloak al `docker-compose.yml`**
- [x] **Tarea de Documentación (06/Sep)**

---

## Fases Pendientes

- [ ] **Tarea 8.2: Configurar un "realm" y los clientes para nuestros servicios en la consola de Keycloak.**
- [ ] **Tarea 8.3: Integrar Spring Security y el adaptador de Keycloak para proteger los endpoints.**

- [ ] **Tarea 9: Arquitectura Orientada a Eventos (Kafka)**
  - [ ] 9.1. Añadir Kafka y Zookeeper al `docker-compose.yml`.
  - [ ] 9.2. Implementar productores y consumidores de eventos en los servicios (`order`, `inventory`, `payment`) para la Saga de Pedidos.

- [ ] **Tarea 10: Pruebas Avanzadas (Testing)**
  - [ ] 10.1. Implementar pruebas de integración con Testcontainers.
  - [ ] 10.2. (Opcional) Implementar pruebas de contrato con Pact.

- [ ] **Tarea 11: Observabilidad (Monitoring)**
  - [ ] 11.1. Añadir Prometheus, Grafana y Jaeger (o Zipkin) al `docker-compose.yml`.
  - [ ] 11.2. Instrumentar los servicios para generar métricas y trazas distribuidas.
  - [ ] 11.3. Crear un panel básico en Grafana.